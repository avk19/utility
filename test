#!/bin/bash

# Global Variables
DB_USER="your_username"
DB_PASS="your_password"
DB_NAME="your_database"
LOG_FILE="/path/to/exception_log.txt"
ERROR_PATTERN="%specific_error_pattern%"

# Function to execute a database query
run_query() {
  local query="$1"
  sqlplus -s $DB_USER/$DB_PASS@$DB_NAME <<EOF
SET FEEDBACK OFF;
SET HEADING OFF;
$query
EXIT;
EOF
}

# Function to count exceptions in the last 30 minutes
count_exceptions() {
  local query="SELECT COUNT(*)
               FROM exceptions
               WHERE exception_date >= SYSDATE - INTERVAL '30' MINUTE
                 AND exception_details LIKE '$ERROR_PATTERN';"
  local count=$(run_query "$query")
  # Trim whitespace from the output
  echo $(echo "$count" | xargs)
}

# Function to fetch and log exception details
fetch_exceptions() {
  local query="SELECT *
               FROM exceptions
               WHERE exception_date >= SYSDATE - INTERVAL '30' MINUTE
                 AND exception_details LIKE '$ERROR_PATTERN';"
  sqlplus -s $DB_USER/$DB_PASS@$DB_NAME <<EOF
SET SERVEROUTPUT ON;
SPOOL $LOG_FILE;
$query
SPOOL OFF;
EXIT;
EOF
}

# Main logic
main() {
  echo "Starting exception check..."
  
  # Step 1: Count exceptions
  local exception_count=$(count_exceptions)
  
  if [ "$exception_count" -eq 0 ]; then
    echo "No exceptions found in the last 30 minutes. Skipping further checks."
    exit 0
  else
    echo "Exceptions found: $exception_count. Fetching details..."
  fi
  
  # Step 2: Fetch exception details
  fetch_exceptions
  
  echo "Exception details logged to $LOG_FILE."
}

# Run the main function
main
